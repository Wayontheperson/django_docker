# docker-compose.yml
version: "3.9"
services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: /run/secrets/db_password
      POSTGRES_DB: backend
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./db_init:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    expose:
      - 5432

    secrets:
      - POSTGRES_PASSWORD

    healthcheck:
      test: pg_isready -U docker -d backend
      interval: 10s
      timeout: 3s
      retries: 3

  nginx:
    container_name: nginx
    build: ./nginx
    image: djangoweb/nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./djangoweb:/srv/compose_test
      - ./log:/var/log/nginx
    depends_on:
      - django

  django:
    container_name: django
    build: ./djangoweb
    image: djangoweb/django
    restart: always
    command: uwsgi --ini uwsgi.ini
    expose:
      - 8000
    volumes:
      - ./djangoweb:/srv/compose_test
      - ./log:/var/log/uwsgi
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      POSTGRES_PASSWORD: /run/secrets/db_password
    secrets:
      - POSTGRES_PASSWORD

  debug:
    container_name: debug_django
    image: djangoweb/django
    restart: always
    command: python manage.py runserver 0.0.0.0:8000 --nothreading --noreload
    volumes:
      - ./djangoweb:/src/compose_test
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      POSTGRES_PASSWORD: /run/secrets/db_password
    secrets:
      - POSTGRES_PASSWORD

  celery:
    container_name: celery
    build: ./djangoweb
    image: djangoweb/django
    restart: always
    command: celery -A djangoweb worker -l info
    volumes:
      - ./djangoweb:/srv/compose_test
    depends_on:
      - django
    env_file:
      - ./.env

  redis:
    container_name: redis
    image: redis
    volumes:
      - redis_data:/data/
    expose:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 3

  flower:
    container_name: flower
    image: mher/flower
    environment:
      - CELERY_BROKER_URL = 'redis://redis:6379/0'
      - FLOWER_PORT = 5555
    restart: always
    volumes:
      - flower_data:/data/
    expose:
      - 5555
    ports:
      - 5555:5555
    command: celery --broker=redis://redis:6379/0 flower --port=5555
    depends_on:
      - redis
      - celery
secrets:
  POSTGRES_PASSWORD:
    file: ./db_password.txt

volumes:
  postgres_data:
    driver: local
  flower_data:
    driver: local
  redis_data:
    driver: local
